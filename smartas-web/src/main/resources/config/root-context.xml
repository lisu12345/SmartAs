<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd      
	http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd    
	http://www.springframework.org/schema/context     http://www.springframework.org/schema/context/spring-context.xsd  
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd       
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd   
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
	
	<beans profile="dev">
		<!--bean name="sessionRepository" class="org.springframework.session.MapSessionRepository"></bean-->
		<bean id="sessionRepository" class="org.springframework.session.jdbc.JdbcOperationsSessionRepository">
			<constructor-arg>
				<bean class="org.springframework.jdbc.core.JdbcTemplate">
					<constructor-arg ref="dataSource"/>
				</bean>
			</constructor-arg>
			<property name="defaultMaxInactiveInterval" value="1800" />
			<property name="tableName" value="tpl_spring_session" />
		</bean>
	</beans>

	<beans profile="sit,uat,pat,prod">
		<bean name="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" />
		<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration" />
	</beans>

	<beans>
		
		<bean id="appEnv" class="org.smartas.core.AppEnv">
			<property name="appName" value="smartas" />
			<property name="dbName" value="smartas" />
			<property name="scope" value="Smart" />
			<property name="tablePrefix" value="tpl" />
		</bean>
		
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<!-- 基本属性 url、user、password -->
	      <property name="url" value="${datasource.url}" />
	      <property name="username" value="${datasource.username}" />
	      <property name="password" value="${datasource.password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="20" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="60000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <property name="validationQuery" value="SELECT 'x'" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	
	      <!-- 
	      		打开PSCache，并且指定每个连接上PSCache的大小
	        	如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
	       -->
	      <property name="poolPreparedStatements" value="false" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	
	      <!-- 配置监控统计拦截的filters -->
		    <property name="filters" value="log4j" />
		    <property name="proxyFilters">
		        <list>
		            <bean class="com.alibaba.druid.filter.stat.StatFilter">
					    <property name="slowSqlMillis" value="10000" />
					    <property name="logSlowSql" value="true" />
					</bean>
		        </list>
		    </property>
		</bean>

		<!--
		
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="annotationClass" value="org.springframework.stereotype.Repository" />
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
			<property name="basePackage" value="xxx.**.dao" />
		</bean>

		<context:component-scan base-package="xxx.**.service.impl" />
		
		-->

		<!-- Root Context: defines shared resources visible to all other web components -->
		<import resource="classpath*:/META-INF/spring/root-context.xml" />
	</beans>
</beans>
